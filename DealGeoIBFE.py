# use python to deal with *.log file generated by geometry model to generate files for IBFE esophagus model:
# two steps (or three)

# step 1) read template file

# step 2) write_out new file

# step 3) plot the cross-sectional mesh for double check
import sys
import numpy as np
import matplotlib.pyplot as plt

def write_read(template_file, log_file, target_file):
	fread =open(template_file,'r');
	fwrite=open(target_file,'w');
	fguide=open(log_file,'r');    
#log file
	line_id =0;
	for aline in fguide:
		line_id = line_id +1
		#aline = fguide.readline()
		print "line#",line_id, "\t", aline
		if line_id ==3:
			log_no3_bcInfo= aline
		elif line_id ==4:
			log_no4_bcData=aline
		elif line_id == 5:
			log_no5_domainInfo = aline
		elif line_id ==6:
			log_no6_domainData=aline
        else:
			print "not used this line"
			
			
# template file:
	str_1 ="begin global_mesh"
#	Lineoff_1 = 3;
	Check_str_1 =0;

	str_2="begin boundary_info"
#	Lineoff_2= 3;
	Check_str_2 =0;
	print "*******************************************************"	
	print "read the template file", template_file
# use list to define things:
	list_str = [str_1, str_2]
#	list_line_no=[Lineoff_1, Lineoff_2]
	list_lines_modify=[2,1]
    
	list_check_id=[0,0];
	num_list = len(list_str);

	monitered_line_id=-1
	line_id =0
	fguide.close()
	for aline in fread:
		line_id = line_id +1
		#aline = fread.readline()
		print "line#",line_id, "\t", aline
		for k in range(num_list):
			astr=list_str[k]
			if aline[0:len(astr)]==astr:
				list_check_id[k]=1;
				print " begin monitor the string =", astr
			#begin to check whether read or right
			if list_check_id[k]>0:
				monitered_line_id=monitered_line_id +1 # monitied line id =0
		# specific code for this version
		if (list_check_id[0]>0 and monitered_line_id ==3):
			fwrite.write(log_no5_domainInfo)
			print"![new line]:",log_no5_domainInfo 
		elif(list_check_id[0]>0 and monitered_line_id ==4):
			fwrite.write(log_no6_domainData)
			print"![new line]:",log_no6_domainData
			list_check_id[0]=0
			monitered_line_id=-1
		elif(list_check_id[1]>0 and monitered_line_id ==3):
			fwrite.write(log_no4_bcData)
			print"![new line]:",log_no4_bcData
			list_check_id[1]=0
			monitered_line_id=-1
		else:
			fwrite.write(aline)
			print aline
	print "success in writing files:",target_file
	
	fread.close()
	fwrite.close()
	return 1
			 
			

		
		
		


if __name__ == "__main__":	
    # command-line argument
    print '++++ running: ', sys.argv
    my_argv=sys.argv[1:]
    alen=len(my_argv)
    print alen
    if (alen<1):
		print '++++ please give the log file about geometry info'
		print '++++ we use default template: geometry.info_template'
		print '++++ check generated file: geometry.info'
		template_file ="geometry.info_template"
		target_file="geometry.info"
		#log_file=my_argv[0]
    else:
		template_file = "geometry.info_template"
		log_file=my_argv[0]
		target_file="geometry.info"
	# read and write at the same time
    		state=write_read(template_file, log_file, target_file);
    		print "state: generate target file: ", target_file, "success=", state
